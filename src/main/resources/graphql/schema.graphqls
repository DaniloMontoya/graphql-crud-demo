type Query{
    findAllBrands: [Brand]
    findOneBrand(id: Int): Brand
    findAllModels:[Model]
    findOneModel(id:Int):Model

}

type Mutation {
    saveBrand(dto: BrandDTO): Brand
    updateBrand(id: Int, dto: BrandDTO): Brand
    deleteBrand(id: Int): Brand
    saveModel(dto: ModelDTO):Model
    updateModel(id:Int, name:String):Model
    deleteModel(id:Int):Model
}

type Subscription {
    findAllBrandsFlux: Brand
    findOneBrandMono(id: Int): Brand
}

type Brand {
    id:Int
    name: String
    country: Country
    models: [Model]
}

type Model{
    id: Int
    name: String
}

enum Country {
    GER
    ENG
    ES
    JAP
}

input BrandDTO {
    name: String
    country: Country
}

input ModelDTO {
    brandId: Int
    name: String
}


